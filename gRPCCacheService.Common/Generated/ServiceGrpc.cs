// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: service.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace gRPCCaheService.Protos {
  public static partial class CacheService
  {
    static readonly string __ServiceName = "gRPCCaheService.CacheService";

    static readonly grpc::Marshaller<global::gRPCCaheService.Protos.SetRequest> __Marshaller_gRPCCaheService_SetRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::gRPCCaheService.Protos.SetRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::gRPCCaheService.Protos.SetResponse> __Marshaller_gRPCCaheService_SetResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::gRPCCaheService.Protos.SetResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::gRPCCaheService.Protos.GetRequest> __Marshaller_gRPCCaheService_GetRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::gRPCCaheService.Protos.GetRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::gRPCCaheService.Protos.GetResponse> __Marshaller_gRPCCaheService_GetResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::gRPCCaheService.Protos.GetResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::gRPCCaheService.Protos.GetByKeyPatternRequest> __Marshaller_gRPCCaheService_GetByKeyPatternRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::gRPCCaheService.Protos.GetByKeyPatternRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::gRPCCaheService.Protos.GetByKeyPatternResponse> __Marshaller_gRPCCaheService_GetByKeyPatternResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::gRPCCaheService.Protos.GetByKeyPatternResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::gRPCCaheService.Protos.SetRequest, global::gRPCCaheService.Protos.SetResponse> __Method_Set = new grpc::Method<global::gRPCCaheService.Protos.SetRequest, global::gRPCCaheService.Protos.SetResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Set",
        __Marshaller_gRPCCaheService_SetRequest,
        __Marshaller_gRPCCaheService_SetResponse);

    static readonly grpc::Method<global::gRPCCaheService.Protos.GetRequest, global::gRPCCaheService.Protos.GetResponse> __Method_Get = new grpc::Method<global::gRPCCaheService.Protos.GetRequest, global::gRPCCaheService.Protos.GetResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Get",
        __Marshaller_gRPCCaheService_GetRequest,
        __Marshaller_gRPCCaheService_GetResponse);

    static readonly grpc::Method<global::gRPCCaheService.Protos.GetByKeyPatternRequest, global::gRPCCaheService.Protos.GetByKeyPatternResponse> __Method_GetByKeyPattern = new grpc::Method<global::gRPCCaheService.Protos.GetByKeyPatternRequest, global::gRPCCaheService.Protos.GetByKeyPatternResponse>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "GetByKeyPattern",
        __Marshaller_gRPCCaheService_GetByKeyPatternRequest,
        __Marshaller_gRPCCaheService_GetByKeyPatternResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::gRPCCaheService.Protos.ServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of CacheService</summary>
    public abstract partial class CacheServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::gRPCCaheService.Protos.SetResponse> Set(global::gRPCCaheService.Protos.SetRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::gRPCCaheService.Protos.GetResponse> Get(global::gRPCCaheService.Protos.GetRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task GetByKeyPattern(global::gRPCCaheService.Protos.GetByKeyPatternRequest request, grpc::IServerStreamWriter<global::gRPCCaheService.Protos.GetByKeyPatternResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for CacheService</summary>
    public partial class CacheServiceClient : grpc::ClientBase<CacheServiceClient>
    {
      /// <summary>Creates a new client for CacheService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public CacheServiceClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for CacheService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public CacheServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected CacheServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected CacheServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::gRPCCaheService.Protos.SetResponse Set(global::gRPCCaheService.Protos.SetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Set(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::gRPCCaheService.Protos.SetResponse Set(global::gRPCCaheService.Protos.SetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Set, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::gRPCCaheService.Protos.SetResponse> SetAsync(global::gRPCCaheService.Protos.SetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::gRPCCaheService.Protos.SetResponse> SetAsync(global::gRPCCaheService.Protos.SetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Set, null, options, request);
      }
      public virtual global::gRPCCaheService.Protos.GetResponse Get(global::gRPCCaheService.Protos.GetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Get(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::gRPCCaheService.Protos.GetResponse Get(global::gRPCCaheService.Protos.GetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Get, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::gRPCCaheService.Protos.GetResponse> GetAsync(global::gRPCCaheService.Protos.GetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::gRPCCaheService.Protos.GetResponse> GetAsync(global::gRPCCaheService.Protos.GetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Get, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::gRPCCaheService.Protos.GetByKeyPatternResponse> GetByKeyPattern(global::gRPCCaheService.Protos.GetByKeyPatternRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetByKeyPattern(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::gRPCCaheService.Protos.GetByKeyPatternResponse> GetByKeyPattern(global::gRPCCaheService.Protos.GetByKeyPatternRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_GetByKeyPattern, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override CacheServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new CacheServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(CacheServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Set, serviceImpl.Set)
          .AddMethod(__Method_Get, serviceImpl.Get)
          .AddMethod(__Method_GetByKeyPattern, serviceImpl.GetByKeyPattern).Build();
    }

  }
}
#endregion
